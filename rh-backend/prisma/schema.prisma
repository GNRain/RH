// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

enum Department {
  HR
  IT
  Business
  Management
}

enum LeaveStatus {
  PENDING
  ACCEPTED
  DECLINED
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  password    String
  passwordResetToken   String?   @unique
  passwordResetExpires DateTime?
  name        String
  familyName  String
  phoneNumber String   @unique 
  email       String   @unique
  cin         String   @unique
  department Department @default(Business)
  position    String
  joinDate    DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isTwoFactorEnabled   Boolean @default(false)
  twoFactorSecret      String?
  leaveRequests LeaveRequest[]
  notifications Notification[]
}

model LeaveRequest {
  id        String   @id @default(cuid())
  fromDate  DateTime
  toDate    DateTime
  reason    String
  status    LeaveStatus @default(PENDING)

  // Relation to the user who made the request
  userId    String
  user      User     @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Notification {
  id        String   @id @default(cuid())
  message   String
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())

  // Relation to the user who receives the notification
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}